// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// OpenMainPage - Use 'OpenMainPageParams' to pass parameters into this method.
        /// </summary>
        public void OpenMainPage()
        {
            #region Variable Declarations
            WinComboBox uIOpenComboBox = this.UIRunWindow.UIItemWindow.UIOpenComboBox;
            WinEdit uIOpenEdit = this.UIRunWindow.UIItemWindow1.UIOpenEdit;
            #endregion

            // Press keyboard shortcut keys 'Windows + r'
            Keyboard.SendKeys(this.OpenMainPageParams.SendKeys, ModifierKeys.Windows);

            // Select 'http://localhost:44654/Registration' in 'Open:' combo box
            uIOpenComboBox.EditableItem = this.OpenMainPageParams.UIOpenComboBoxEditableItem;

            // Type '{Enter}' in 'Open:' text box
            Keyboard.SendKeys(uIOpenEdit, this.OpenMainPageParams.UIOpenEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// CoursesTest - Use 'CoursesTestParams' to pass parameters into this method.
        /// </summary>
        public void CoursesTest()
        {
            #region Variable Declarations
            WinComboBox uIOpenComboBox = this.UIRunWindow.UIItemWindow.UIOpenComboBox;
            WinEdit uIOpenEdit = this.UIRunWindow.UIItemWindow1.UIOpenEdit;
            WinHyperlink uIBrowseCoursesHyperlink = this.UICollegeRegistrationMWindow.UIBrowseCoursesListItem.UIBrowseCoursesHyperlink;
            #endregion

            // Press keyboard shortcut keys 'Windows + r'
            Keyboard.SendKeys(this.CoursesTestParams.SendKeys, ModifierKeys.Windows);

            // Select 'http://localhost:44654/Registration' in 'Open:' combo box
            uIOpenComboBox.EditableItem = this.CoursesTestParams.UIOpenComboBoxEditableItem;

            // Type '{Enter}' in 'Open:' text box
            Keyboard.SendKeys(uIOpenEdit, this.CoursesTestParams.UIOpenEditSendKeys, ModifierKeys.None);

            // Click 'Browse Courses' link
            Mouse.Click(uIBrowseCoursesHyperlink, new Point(71, 15));
        }
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinEdit uICoursesEdit = this.UICollegeRegistrationMWindow.UICollegeRegistrationDocument.UICoursesEdit;
            #endregion

            // Verify that the 'Name' property of 'Courses' text box equals 'Courses'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UICoursesEditName, uICoursesEdit.Name, "Courses page not loaded.");
        }
        
        #region Properties
        public virtual OpenMainPageParams OpenMainPageParams
        {
            get
            {
                if ((this.mOpenMainPageParams == null))
                {
                    this.mOpenMainPageParams = new OpenMainPageParams();
                }
                return this.mOpenMainPageParams;
            }
        }
        
        public virtual CoursesTestParams CoursesTestParams
        {
            get
            {
                if ((this.mCoursesTestParams == null))
                {
                    this.mCoursesTestParams = new CoursesTestParams();
                }
                return this.mCoursesTestParams;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UIRunWindow UIRunWindow
        {
            get
            {
                if ((this.mUIRunWindow == null))
                {
                    this.mUIRunWindow = new UIRunWindow();
                }
                return this.mUIRunWindow;
            }
        }
        
        public UICollegeRegistrationMWindow UICollegeRegistrationMWindow
        {
            get
            {
                if ((this.mUICollegeRegistrationMWindow == null))
                {
                    this.mUICollegeRegistrationMWindow = new UICollegeRegistrationMWindow();
                }
                return this.mUICollegeRegistrationMWindow;
            }
        }
        #endregion
        
        #region Fields
        private OpenMainPageParams mOpenMainPageParams;
        
        private CoursesTestParams mCoursesTestParams;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UIRunWindow mUIRunWindow;
        
        private UICollegeRegistrationMWindow mUICollegeRegistrationMWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenMainPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class OpenMainPageParams
    {
        
        #region Fields
        /// <summary>
        /// Press keyboard shortcut keys 'Windows + r'
        /// </summary>
        public string SendKeys = "r";
        
        /// <summary>
        /// Select 'http://localhost:44654/Registration' in 'Open:' combo box
        /// </summary>
        public string UIOpenComboBoxEditableItem = "http://localhost:44654/Registration";
        
        /// <summary>
        /// Type '{Enter}' in 'Open:' text box
        /// </summary>
        public string UIOpenEditSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CoursesTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class CoursesTestParams
    {
        
        #region Fields
        /// <summary>
        /// Press keyboard shortcut keys 'Windows + r'
        /// </summary>
        public string SendKeys = "r";
        
        /// <summary>
        /// Select 'http://localhost:44654/Registration' in 'Open:' combo box
        /// </summary>
        public string UIOpenComboBoxEditableItem = "http://localhost:44654/Registration";
        
        /// <summary>
        /// Type '{Enter}' in 'Open:' text box
        /// </summary>
        public string UIOpenEditSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Courses' text box equals 'Courses'
        /// </summary>
        public string UICoursesEditName = "Courses";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIRunWindow : WinWindow
    {
        
        public UIRunWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Run";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Run");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "12298";
            this.WindowTitles.Add("Run");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIOpenComboBox
        {
            get
            {
                if ((this.mUIOpenComboBox == null))
                {
                    this.mUIOpenComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIOpenComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Open:";
                    this.mUIOpenComboBox.WindowTitles.Add("Run");
                    #endregion
                }
                return this.mUIOpenComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIOpenComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Run");
            #endregion
        }
        
        #region Properties
        public WinEdit UIOpenEdit
        {
            get
            {
                if ((this.mUIOpenEdit == null))
                {
                    this.mUIOpenEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIOpenEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Open:";
                    this.mUIOpenEdit.WindowTitles.Add("Run");
                    #endregion
                }
                return this.mUIOpenEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIOpenEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICollegeRegistrationMWindow : WinWindow
    {
        
        public UICollegeRegistrationMWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "College Registration - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("College Registration - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIBrowseCoursesListItem UIBrowseCoursesListItem
        {
            get
            {
                if ((this.mUIBrowseCoursesListItem == null))
                {
                    this.mUIBrowseCoursesListItem = new UIBrowseCoursesListItem(this);
                }
                return this.mUIBrowseCoursesListItem;
            }
        }
        
        public UICollegeRegistrationDocument UICollegeRegistrationDocument
        {
            get
            {
                if ((this.mUICollegeRegistrationDocument == null))
                {
                    this.mUICollegeRegistrationDocument = new UICollegeRegistrationDocument(this);
                }
                return this.mUICollegeRegistrationDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIBrowseCoursesListItem mUIBrowseCoursesListItem;
        
        private UICollegeRegistrationDocument mUICollegeRegistrationDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIBrowseCoursesListItem : WinListItem
    {
        
        public UIBrowseCoursesListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Browse Courses";
            this.WindowTitles.Add("College Registration - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinHyperlink UIBrowseCoursesHyperlink
        {
            get
            {
                if ((this.mUIBrowseCoursesHyperlink == null))
                {
                    this.mUIBrowseCoursesHyperlink = new WinHyperlink(this);
                    #region Search Criteria
                    this.mUIBrowseCoursesHyperlink.SearchProperties[WinHyperlink.PropertyNames.Name] = "Browse Courses";
                    this.mUIBrowseCoursesHyperlink.WindowTitles.Add("College Registration - Mozilla Firefox");
                    #endregion
                }
                return this.mUIBrowseCoursesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mUIBrowseCoursesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICollegeRegistrationDocument : WinControl
    {
        
        public UICollegeRegistrationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "College Registration";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("College Registration - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UICoursesEdit
        {
            get
            {
                if ((this.mUICoursesEdit == null))
                {
                    this.mUICoursesEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICoursesEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Courses";
                    this.mUICoursesEdit.WindowTitles.Add("College Registration - Mozilla Firefox");
                    #endregion
                }
                return this.mUICoursesEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICoursesEdit;
        #endregion
    }
}
